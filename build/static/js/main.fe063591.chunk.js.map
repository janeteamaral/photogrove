{"version":3,"sources":["auth/react-auth0-wrapper.js","components/Header.js","components/Like.js","utils/TimeDifference.js","components/Post.js","components/Follow.js","components/Profile.js","components/Feed.js","components/Upload.js","components/SecuredRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","Header","className","to","onClick","sub","FETCH_LIKES","gql","LIKE_POST","DELETE_LIKE","Like","props","liked","setLiked","countLikes","setCountLikes","userId","useRef","current","useMutation","variables","postId","refetchQueries","query","id","likePost","deleteLike","useQuery","data","message","Post","Likes","length","Likes_aggregate","aggregate","count","timeDifferenceForDate","date","previous","elapsed","milliSecondsPerMinute","Math","round","milliSecondsPerHour","milliSecondsPerDay","timeDifference","Date","getTime","POST_INFO","match","Container","map","post","index","key","User","src","avatar","alt","name","caption","url","created_at","FETCH_FOLLWERS","FOLLOW_USER","UNFOLLOW_USER","Follow","followed","setFollowed","firstRun","followingId","NUMBER_OF_FOLLOWERS","NUMBER_OF_FOLLOWING","followUser","unfollowUser","Button","variant","USER_INFO","withRouter","isLoggedUser","dataFollowers","dataFollowing","Row","Col","xs","Posts_aggregate","Follow_aggregate","class","POST_LIST","Feed","SUBMIT_POST","Upload","modalShow","setModalShow","setCaption","setUrl","setError","submitPost","Modal","show","onHide","size","aria-labelledby","centered","closeButton","Title","Body","onSubmit","e","preventDefault","img","Image","onload","catch","log","toString","onerror","toast","onChange","target","type","SecuredRoute","Component","component","path","render","App","accessToken","setAccessToken","token","getAccessToken","httpLink","HttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","configure","exact","Profile","Boolean","hostname","ReactDOM","domain","config","client_id","clientId","audience","redirect_uri","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe063591.chunk.js","sourcesContent":["// src/react-auth0-wrapper.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};","import React from \"react\";\nimport \"../styles/App.css\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\n\nfunction Header() {\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  return (\n    <nav className=\"Nav\">\n      <div className=\"Nav-menus\">\n        <div className=\"Nav-brand\">\n          <Link className=\"Nav-brand-logo\" to=\"/\">\n            PhotoGrove - Janete Amaral\n          </Link>\n        </div>\n        <div className=\"Nav-search\"> </div>\n        <div className=\"Nav-brand-direita\"> </div>\n\n        {!isAuthenticated && (\n          <>\n            <button\n              className=\"Nav-user-button button-no-style\"\n              onClick={() => loginWithRedirect({})}\n            />\n          </>\n        )}\n\n        {isAuthenticated && (\n          <>\n            <Link className=\"Nav-user-button\" to={\"/user/\" + user.sub} />\n          </>\n        )}\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React, { useState, useRef } from \"react\";\nimport \"../styles/App.css\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\n\nconst FETCH_LIKES = gql`\n  query($id: Int!, $userId: String!) {\n    Post(where: { id: { _eq: $id } }) {\n      Likes_aggregate {\n        aggregate {\n          count\n        }\n      }\n      Likes(where: { user_id: { _eq: $userId } }) {\n        id\n      }\n    }\n  }\n`;\n\nconst LIKE_POST = gql`\n  mutation($postId: Int!, $userId: String!) {\n    insert_Like(objects: [{ post_id: $postId, user_id: $userId }]) {\n      affected_rows\n    }\n  }\n`;\n\nconst DELETE_LIKE = gql`\n  mutation($postId: Int!, $userId: String!) {\n    delete_Like(\n      where: { user_id: { _eq: $userId }, post_id: { _eq: $postId } }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nfunction Like(props) {\n  const { isAuthenticated, user } = useAuth0();\n\n  // stores if the currently logged in user has liked the post\n  const [liked, setLiked] = useState(false);\n  // stores the number of likes\n  const [countLikes, setCountLikes] = useState(-1);\n\n  // will store value of userId for the lifetime of component\n  const userId = useRef(null);\n\n  if (isAuthenticated) {\n    userId.current = user.sub;\n  } else {\n    userId.current = \"none\";\n  }\n\n  // like post mutation\n  const [likePost] = useMutation(LIKE_POST, {\n    variables: { postId: props.postId, userId: userId.current },\n    refetchQueries: [\n      {\n        query: FETCH_LIKES,\n        variables: { id: props.postId, userId: userId.current }\n      }\n    ]\n  });\n\n  // delete post mutation\n  const [deleteLike] = useMutation(DELETE_LIKE, {\n    variables: { postId: props.postId, userId: userId.current },\n    refetchQueries: [\n      {\n        query: FETCH_LIKES,\n        variables: { id: props.postId, userId: userId.current }\n      }\n    ]\n  });\n\n  // fetch number of likes and array with like_id if user has already liked the post or an empty array\n  const { loading, error, data } = useQuery(FETCH_LIKES, {\n    variables: { id: props.postId, userId: userId.current }\n  });\n\n  // if above useQuery data is not loaded\n  if (loading) return \"Loading...\";\n  // if data fetch failed\n  if (error) return `Error! ${error.message}`;\n\n  // countLikes is used to ensure that it should only run for the first time\n  if (countLikes === -1) {\n    // if the user has already liked the post, we know that data has loaded now so we can reference data.Post\n    if (data.Post[0].Likes.length > 0) {\n      setLiked(true);\n    }\n\n    // store value of number of likes in state, we are putting check conditions to prevent infinite loops\n    setCountLikes(data.Post[0].Likes_aggregate.aggregate.count);\n  }\n\n  return (\n    <div className=\"post-like-container\">\n      {isAuthenticated && (\n        <>\n          {!liked && (\n            <button\n              className=\"post-like-button-white button-nodec\"\n              onClick={() => {\n                likePost();\n                setLiked(true);\n                setCountLikes(countLikes + 1);\n              }}\n            />\n          )}\n          {liked && (\n            <button\n              className=\"post-like-button-black button-nodec\"\n              onClick={() => {\n                deleteLike();\n                setLiked(false);\n                setCountLikes(countLikes - 1);\n              }}\n            />\n          )}\n        </>\n      )}\n      {countLikes ? <span className=\"Post-likes\"><strong>{countLikes} likes</strong></span> : null}\n    </div>\n  );\n}\n\nexport default Like;\n","function timeDifference(current, previous) {\n    const milliSecondsPerMinute = 60 * 1000\n    const milliSecondsPerHour = milliSecondsPerMinute * 60\n    const milliSecondsPerDay = milliSecondsPerHour * 24\n    const milliSecondsPerMonth = milliSecondsPerDay * 30\n    const milliSecondsPerYear = milliSecondsPerDay * 365\n  \n    const elapsed = current - previous\n  \n    if (elapsed < milliSecondsPerMinute / 3) {\n      return 'just now'\n    }\n  \n    if (elapsed < milliSecondsPerMinute) {\n      return 'less than 1 min ago'\n    } else if (elapsed < milliSecondsPerHour) {\n      return Math.round(elapsed / milliSecondsPerMinute) + ' min ago'\n    } else if (elapsed < milliSecondsPerDay) {\n      return Math.round(elapsed / milliSecondsPerHour) + ' h ago'\n    } else if (elapsed < milliSecondsPerMonth) {\n      return Math.round(elapsed / milliSecondsPerDay) + ' days ago'\n    } else if (elapsed < milliSecondsPerYear) {\n      return Math.round(elapsed / milliSecondsPerMonth) + ' mo ago'\n    } else {\n      return Math.round(elapsed / milliSecondsPerYear) + ' years ago'\n    }\n  }\n  \n  export function timeDifferenceForDate(date) {\n    const now = new Date().getTime()\n    const updated = new Date(date).getTime()\n    return timeDifference(now, updated)\n  }","import React from \"react\";\nimport \"../styles/App.css\";\nimport { gql } from \"apollo-boost\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Like from \"./Like.js\";\nimport { timeDifferenceForDate } from \"../utils/TimeDifference.js\";\nimport { Container } from \"react-bootstrap\";\n\nexport const POST_INFO = gql`\n  query($id: Int!) {\n    Post(where: { id: { _eq: $id } }) {\n      id\n      caption\n      created_at\n      url\n      User {\n        avatar\n        id\n        name\n      }\n    }\n  }\n`;\n\nfunction Post(props) {\n  let postId = props.id ? props.id : props.match.params.id;\n\n  const { loading, error, data } = useQuery(POST_INFO, {\n    variables: { id: postId }\n  });\n\n  if (loading) return  \"Loading Post.js..\";\n                     \n\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n       <Container>\n        {data.Post.map((post, index) => (\n          <article className=\"Post\" key={index}>\n            <header>\n              <div className=\"Post-user\">\n                <div className=\"Post-user-avatar\">\n                  <Link to={\"/user/\" + post.User.id}>\n                    <img src={post.User.avatar}  alt={post.User.name} />\n                  </Link>\n                </div>\n                <div className=\"Post-user-nickname\">\n                  <Link className=\"anchor-nodec\" to={\"/user/\" + post.User.id}>\n                    <span>{post.User.name}</span>\n                  </Link>\n                </div>\n              </div>\n            </header>\n            <div className=\"Post-image\">\n              <div className=\"Post-image-bg\">\n                <img alt={post.caption} src={post.url} />\n              </div>\n            </div>\n            <Like postId={postId} />\n            <div className=\"Post-caption\">\n              <Link className=\"anchor-nodec\" to={\"/user/\" + post.User.id}>\n                <strong>{post.User.name}</strong>\n              </Link>\n              &nbsp;{post.caption}\n            </div>\n            <div className=\"Post-time\">\n              {timeDifferenceForDate(post.created_at)}\n            </div>\n          </article>\n        ))}\n      </Container>\n    </>\n  );\n}\n\nexport default Post;\n","import React, { useState, useRef } from \"react\";\nimport \"../styles/App.css\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\nimport { Button } from \"react-bootstrap\";\nimport { NUMBER_OF_FOLLOWERS, NUMBER_OF_FOLLOWING } from \"./Profile.js\";\n\nconst FETCH_FOLLWERS = gql`\n  query($followingId: String!, $userId: String!) {\n    Follow(\n      where: {\n        follower_id: { _eq: $userId }\n        following_id: { _eq: $followingId }\n      }\n    ) {\n      id\n    }\n  }\n`;\n\nconst FOLLOW_USER = gql`\n  mutation($followingId: String!, $userId: String!) {\n    insert_Follow(\n      objects: [{ follower_id: $userId, following_id: $followingId }]\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nconst UNFOLLOW_USER = gql`\n  mutation($followingId: String!, $userId: String!) {\n    delete_Follow(\n      where: {\n        follower_id: { _eq: $userId }\n        following_id: { _eq: $followingId }\n      }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nfunction Follow(props) {\n  const { isAuthenticated, user } = useAuth0();\n\n  // stores if the currently logged in user has followed the user\n  const [followed, setFollowed] = useState(false);\n\n  // stores if this is the first render of component\n  const firstRun = useRef(true);\n\n  // will store value of userId for the lifetime of component\n  const userId = useRef(null);\n\n  if (isAuthenticated) {\n    userId.current = user.sub;\n  } else {\n    userId.current = \"none\";\n  }\n\n  // follow user mutation\n  const [followUser] = useMutation(FOLLOW_USER, {\n    variables: { followingId: props.id, userId: userId.current },\n    refetchQueries: [\n      {\n        query: FETCH_FOLLWERS,\n        variables: { followingId: props.id, userId: userId.current }\n      },\n      {\n        query: NUMBER_OF_FOLLOWERS,\n        variables: { id: props.id }\n      },\n      {\n        query: NUMBER_OF_FOLLOWING,\n        variables: { id: userId.current }\n      }\n    ]\n  });\n\n  // unfollow user mutation\n  const [unfollowUser] = useMutation(UNFOLLOW_USER, {\n    variables: { followingId: props.id, userId: userId.current },\n    refetchQueries: [\n      {\n        query: FETCH_FOLLWERS,\n        variables: { followingId: props.id, userId: userId.current }\n      },\n      {\n        query: NUMBER_OF_FOLLOWERS,\n        variables: { id: props.id }\n      },\n      {\n        query: NUMBER_OF_FOLLOWING,\n        variables: { id: userId.current }\n      }\n    ]\n  });\n\n  // fetch array with id if current user already follows the user or an empty array\n  const { loading, error, data } = useQuery(FETCH_FOLLWERS, {\n    variables: { followingId: props.id, userId: userId.current }\n  });\n\n  // if above useQuery data is not loaded\n  if (loading) return \"Loading Follow.js...\";\n  // if data fetch failed\n  if (error) return `Error! ${error.message}`;\n\n  // firstRun is used to ensure that it should only run for the first time\n  if (firstRun.current) {\n    // if current user already follows, set followed state variable to true\n    if (data.Follow.length > 0) {\n      setFollowed(true);\n    }\n\n    firstRun.current = false;\n  }\n\n  return (\n    <div className=\"post-like-container\">\n      {!followed && (\n        <Button\n          variant=\"outline-secondary\"\n          className=\"profile-logout\"\n          onClick={() => {\n            followUser();\n            setFollowed(true);\n          }}\n        >\n          Follow\n        </Button>\n      )}\n      {followed && (\n        <Button\n          variant=\"outline-success\"\n          className=\"profile-logout\"\n          onClick={() => {\n            unfollowUser();\n            setFollowed(false);\n          }}\n        >\n          Following\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport default Follow;\n","import { useQuery } from \"@apollo/react-hooks\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { gql } from \"apollo-boost\";\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\nimport { Link } from \"react-router-dom\";\nimport Follow from \"./Follow.js\";\n\nexport const USER_INFO = gql`\n  query($id: String!) {\n    User(where: { id: { _eq: $id } }) {\n      email\n      avatar\n      last_seen\n      name\n      Posts_aggregate {\n        aggregate {\n          count\n        }\n      }\n    }\n    Post(where: { user_id: { _eq: $id } }) {\n      url\n      caption\n      id\n    }\n  }\n`;\n\nexport const NUMBER_OF_FOLLOWING = gql`\n  query($id: String!) {\n    Follow_aggregate(where: { follower_id: { _eq: $id } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nexport const NUMBER_OF_FOLLOWERS = gql`\n  query($id: String!) {\n    Follow_aggregate(where: { following_id: { _eq: $id } }) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nfunction Profile(props) {\n  const { isAuthenticated, logout, user } = useAuth0();\n\n  const isLoggedUser = () => {\n    if (user.sub === props.match.params.id) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const { loading, error, data } = useQuery(USER_INFO, {\n    variables: { id: props.match.params.id }\n  });\n\n  const dataFollowers = useQuery(NUMBER_OF_FOLLOWERS, {\n    variables: { id: props.match.params.id }\n  });\n\n  const dataFollowing = useQuery(NUMBER_OF_FOLLOWING, {\n    variables: { id: props.match.params.id }\n  });\n\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n  if (dataFollowing.loading) return \"Loading Profile.js - Following...\";\n  if (dataFollowers.loading) return \"Loading Profile.js - Followers...\";\n\n  if (dataFollowing.error) return `Error! ${error.message}`;\n  if (dataFollowers.error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <Container className=\"container\">\n        <Container className=\"profile-details\">\n          {data.User.map((user, index) => (\n            <Row key={index}>\n              <Col xs={4}>\n                <img\n                  className=\"profile-avatar\"\n                  alt={user.name}\n                  src={user.avatar}\n                />\n              </Col>\n              <Col>\n                <Row>\n                  <Col className=\"profile-username\" xs=\"auto\">\n                    {user.name} {\" \"}\n                  </Col>\n\n                  <Col className=\"profile-logout\" xs={4}>\n                    {isAuthenticated && (\n                      <>\n                        {isLoggedUser() && (\n                          <>\n                            <Button\n                              variant=\"outline-secondary\"\n                              className=\"profile-logout\"\n                              onClick={() => logout()}\n                            >\n                              Sair\n                            </Button>\n                          </>\n                        )}\n                        {!isLoggedUser() && (\n                          <Follow id={props.match.params.id} />\n                        )}\n                      </>\n                    )}\n                  </Col>\n                </Row>\n                <Row>\n                  <Col className=\"profile-stats\" xs=\"auto\">\n                    <strong>\n                    {\"   \"} Postagens - {\"   \"}\n                    {user.Posts_aggregate.aggregate.count}\n                    {\" *  \"}\n                    </strong>\n                   </Col>\n\n                  <Col className=\"profile-stats\" xs=\"auto\">\n                    <strong>\n                    {\"    \"}   Seguidores - {\"   \"}\n                      {dataFollowers.data.Follow_aggregate.aggregate.count}\n                      {\" *  \"}\n                      </strong>\n                  </Col>\n\n                  <Col className=\"profile-stats\" xs=\"auto\">\n                    <strong>\n                     {\"   \"}     Seguindo - {\"  \"}\n                      {dataFollowing.data.Follow_aggregate.aggregate.count}\n                    </strong>\n                    </Col>\n                </Row>\n              </Col>\n            </Row>\n          ))}\n        </Container>\n        <hr />\n        <Row>\n          {data.Post.map((post, index) => (\n            <Link to={\"/post/\" + post.id} key={index}>\n              <Col xs={4} className=\"profile-grid\">\n                <div class=\"profile-post-image\">\n                  <img\n                    className=\"profile-post-image\"\n                    alt={post.caption}\n                    src={post.url}\n                  />\n                </div>\n              </Col>\n            </Link>\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default withRouter(Profile);\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Container } from \"react-bootstrap\";\nimport Post from \"./Post.js\"\n\nexport const POST_LIST = gql`\n  {\n    Post(order_by: { created_at: desc }) {\n      id\n    }\n  }\n`;\n\nfunction Feed(props) {\n\n  const { loading, error, data } = useQuery(POST_LIST);\n\n  if (loading) return \"Loading .............Feed.js...\";\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n     {/* <Container> */}\n      {data.Post.map((post, index) => (\n          <Post id={post.id} key={index}/>\n      ))}\n     {/* </Container> */}\n    </>\n  );\n}\n\nexport default Feed;\n","import React, { useState } from 'react';\r\nimport '../styles/App.css';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Container, Modal, Button, Row } from 'react-bootstrap';\r\nimport { useAuth0 } from '../auth/react-auth0-wrapper';\r\nimport { toast } from 'react-toastify';\r\nimport { POST_LIST } from './Feed.js';\r\nimport { USER_INFO } from './Profile.js';\r\n\r\nconst SUBMIT_POST = gql`\r\n  mutation($url: String!, $userId: String!, $caption: String!) {\r\n    insert_Post(objects: { url: $url, caption: $caption, user_id: $userId }) {\r\n      affected_rows\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Upload() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  const { user } = useAuth0();\r\n  const [caption, setCaption] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [submitPost] = useMutation(SUBMIT_POST);\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className='button-nodec post-upload-button'\r\n        onClick={() => setModalShow(true)}\r\n      />\r\n\r\n      <Modal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='contained-modal-title-vcenter'>Inserir Posts</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <form\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                // checks if the url points to a valid image\r\n                let img = new Image();\r\n                img.onload = function() {\r\n                  submitPost({\r\n                    variables: { caption, userId: user.sub, url },\r\n                    refetchQueries: [\r\n                      { query: POST_LIST },\r\n                      { query: USER_INFO, variables: { id: user.sub } }\r\n                    ]\r\n                  }).catch(function(error) {\r\n                    console.log(error);\r\n                    setError(error.toString());\r\n                  });\r\n                };\r\n                img.onerror = function() {\r\n                  toast(`Não foi encontrada imagem na URL informada`);\r\n                };\r\n                img.src = url; // fires off loading of image\r\n\r\n                //You are having a controlled component where input value is determined by this.state._variable_name.\r\n                // So once you submit you have to clear your state which will clear your input automatically.\r\n                setCaption('');\r\n                setUrl('');\r\n              }}\r\n            >\r\n              <Row>\r\n                <span>Entrar uma URL válida de uma imagem</span>\r\n              </Row>\r\n              <Row>\r\n                <input\r\n                  value={url}\r\n                  onChange={e => setUrl(e.target.value)}\r\n                  type='text'\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <span>Legenda:</span>\r\n              </Row>\r\n              <Row>\r\n                <input\r\n                  value={caption}\r\n                  onChange={e => setCaption(e.target.value)}\r\n                  type='text'\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Button\r\n                  variant='outline-dark'\r\n                  className='profile-logout top-padding'\r\n                  type='submit'\r\n                  value='Submit'\r\n                  onClick={() => setModalShow(false)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Row>\r\n              {error}\r\n            </form>\r\n          </Container>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Upload;","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport { useAuth0 } from \"../auth/react-auth0-wrapper\";\n\n\nfunction SecuredRoute(props) {\n  const {component: Component, path} = props;\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n  return (\n    <Route path={path} render={() => {\n        if (!isAuthenticated) {\n          loginWithRedirect({});\n          return <div></div>;\n        }\n        return <Component />\n    }} />\n  );\n}\n\nexport default SecuredRoute;","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport Header from './Header.js';\nimport Post from './Post.js';\nimport Profile from './Profile.js';\nimport Feed from './Feed.js';\nimport Upload from './Upload.js';\n\n// for authentication using auth0\nimport { useAuth0 } from '../auth/react-auth0-wrapper';\n\n// for routing\nimport { Switch, Route } from 'react-router-dom';\nimport SecuredRoute from './SecuredRoute';\n\n// for apollo client\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { setContext } from 'apollo-link-context';\n\n// for toast notifications\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const { isAuthenticated, user } = useAuth0();\n\n  // used state to get accessToken through getTokenSilently(), the component re-renders when state changes, thus we have\n  // our accessToken in apollo client instance.\n\n  const [accessToken, setAccessToken] = useState('');\n\n  const { getTokenSilently, loading } = useAuth0();\n  if (loading) {\n    return 'Loading...App.js';\n  }\n  // get access token\n  const getAccessToken = async () => {\n    // getTokenSilently() returns a promise\n    try {\n      const token = await getTokenSilently();\n      setAccessToken(token);\n      console.log(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  getAccessToken();\n\n  // for apollo client\n  const httpLink = new HttpLink({\n    uri: 'https://photogrove.herokuapp.com/v1/graphql'\n  });\n\n  const authLink = setContext((_, { headers }) => {\n    const token = accessToken;\n    if (token) {\n      return {\n        headers: {\n          ...headers,\n          authorization: `Bearer ${token}`\n        }\n      };\n    } else {\n      return {\n        headers: {\n          ...headers\n        }\n      };\n    }\n  });\n  \n \n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  });\n\n  // used for toast notifications\n  toast.configure();\n\n  return (\n    <ApolloProvider client={client}>\n      <Header />\n      {isAuthenticated && <Upload />}\n      <Switch>\n        <Route exact path='/' component={Feed} />\n        <Route path={'/post/:id'} component={Post} />\n        <SecuredRoute path={'/user/:id'} component={Profile} />\n      </Switch>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport config from \"./auth/auth_config.json\";\nimport { Auth0Provider } from \"./auth/react-auth0-wrapper\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n  window.history.replaceState(\n    {},\n    document.title,\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <BrowserRouter>\n    <Auth0Provider\n      domain={config.domain}\n      client_id={config.clientId}\n      audience={config.audience}\n      redirect_uri=\"http://localhost:3000/\"\n      onRedirectCallback={onRedirectCallback}\n    >\n      <App />\n    </Auth0Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}